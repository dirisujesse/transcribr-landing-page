---
import Footer from "../components/Footer.astro";
import Header from "../components/Header.astro";
import "../styles/global.css";

export interface Props {
  title: string;
  description?: string;
}

const {
  title,
  description = "Transform your audio into accurate transcripts with AI-powered precision. Professional transcription made simple.",
} = Astro.props;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />

    <!-- Open Graph -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content="https://transcribr.app" />
    <meta property="og:image" content="/og-image.jpg" />

    <!-- Twitter -->
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content="/og-image.jpg" />

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11" defer async
    ></script>
    <title>{title}</title>
  </head>
  <body>
    <Header />
      <slot />
    <Footer />

    <script>
      const observerOptions = {
        threshold: 0.1,
        rootMargin: "0px 0px -50px 0px",
      };

      const observer = new IntersectionObserver((entries) => {
        entries.forEach((entry) => {
          if (entry.isIntersecting) {
            entry.target.classList.add("animate-fade-up");
          }
        });
      }, observerOptions);

      document.addEventListener("DOMContentLoaded", () => {
        const elements = document.querySelectorAll("[data-animate]");
        elements.forEach((el) => observer.observe(el));
      });
    </script>
  </body>
</html>
